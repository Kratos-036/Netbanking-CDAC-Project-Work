Deploy

React ->

Docker file :

> docker build -t aarna-bank-react:latest .

> docker run -p 3000:3000 aarna-bank-react

Do rpm start in running container terminal

Check on browser



SpringBoot ->

Docker File

> docker build -t aarna-bank-springboot:latest .

> docker run -i -p 8080:8080 aarna-bank-springboot sh

Will fail due to communication with missing mysql



MySQL ->

> docker pull mysql:8.1.0-oracle

> docker network create db-network

> docker run --name bankdb-container --network db-network -e MYSQL_ROOT_PASSWORD=80316 -d mysql:8.1.0-oracle

> docker run -it --network db-network --rm mysql:8.1.0-oracle mysql -hbankdb-container -uroot -p80316

spring.datasource.url=jdbc:mysql://bankdb-container/Aarna?createDatabaseIfNotExist=true&useSSL=false&allowPublicKeyRetrieval=true

spring.datasource.username=root


> docker build -t aarna-bank-springboot:db_version .

> docker run -it --network db-network -p 8080:8080 aarna-bank-springboot:db_version

Ctrl + C after done testing


https://youtu.be/89l2o70GdO8?si=5ls-_75OqNhz1KMC

Checking requests part is remaining

touch docker-compose.yml

spring.datasource.username=D3_80316_Anurag

>Write into it


# RUN npm run build

CMD [ "npm", "start" ]
 In frontend Dockerfile

>docker compose up --build


